<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		 http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">


    <context:annotation-config />
    <tx:annotation-driven />

    <!--

    <context:component-scan base-package="lirex" />
-->
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/piss"/>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="fmi.hibernate.model" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="false" />
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                <prop key="hibernate.search.default.indexBase" >./Index</prop>
                <!--
                                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.impl.FSDirectoryProvider</prop>
                                <prop key="hibernate.search.default.indexBase">#{appProps.indexLocation}</prop>
                                <prop key="hibernate.search.lucene_version">#{appProps['hibernate.search.lucene_version']}</prop>
                -->
            </props>
        </property>
    </bean>

    <util:map id="jpaPropertyMap">

    </util:map>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>

    <jpa:repositories base-package="fmi.repository" ></jpa:repositories>
    <!--
      <bean id="sessionFactory"
            class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
          <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
      </bean>



      <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
          <property name="sessionFactory" ref="sessionFactory"/>
      </bean>
      -->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref='customRealm'/>

    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>


    <bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10000000" />
    </bean>

    <bean id="myRealm" class="org.apache.shiro.realm.text.TextConfigurationRealm ">
       <!-- <property name="credentialsMatcher" ref="passwordMatcher"/>-->
        <property name="userDefinitions">
            <value>stef = stef,ADMINISTRATOR
                ira = ira,view
                mitko = mitko,ADMINISTRATOR
                owner = owner,OWNER
                zhristov = zhristov, admin
            </value>
        </property>
        <property name="roleDefinitions">
            <value>
                ADMINISTRATOR = *
                user = user:*
                view=view:*
                OWNER=OWNER:*
            </value>
        </property>
    </bean>
    <bean id="passwordService" class="org.apache.shiro.authc.credential.DefaultPasswordService"/>
    <!--<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Sha256CredentialsMatcher"/>-->

    <bean id="myRealm1" class="org.apache.shiro.realm.jdbc.JdbcRealm ">
        <property name="dataSource" ref="dataSource"/>
        <property name="credentialsMatcher" ref="passwordMatcher"/>
        <property name="authenticationQuery" value="select password from user where username = ?;"/>
        <property name="permissionsLookupEnabled" value="true"/>
        <property name="userRolesQuery" value="select u.role_id from user u where u.username = ?;"/>
        <property name="permissionsQuery" value="select ur.privileges from userrole_privileges ur where ur.UserRole_id = ?;"/>
    </bean>

    <bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher"  >
    <property name="passwordService" ref="passwordService" />
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/home"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="filterChainDefinitions">
            <value>
                /assets/** = anon
                /singUp/** = anon
                /** = authc

            </value>
        </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean id="customRealm" class="fmi.realm.Realm"/>


</beans>

